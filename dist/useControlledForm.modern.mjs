import{useState as r,useRef as e}from"react";function t(){return t=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},t.apply(null,arguments)}const n=n=>{const c=()=>Object.keys(n).reduce((r,e)=>(r[e]="",r),{}),[a,o]=r(n),[u,s]=r(()=>c()),l=e(!1),i=()=>{s(c()),l.current=!1};return t({},a,{form:t({},Object.keys(a).reduce((r,e)=>(r[e]={id:e,value:a[e],error:u[e]||""},r),{}),{reset:()=>{o(n),i()},clearErrors:i,hasErrors:()=>l.current}),onInputChange:r=>{const{name:e,value:n,type:c,checked:a}=r.target;o(r=>t({},r,{[e]:"checkbox"===c?a:n}))},attachInputError:(r,e)=>{l.current=l.current||""!==e,s(t=>{const n=t||{};return n[r]=e,n})}})};export{n as default};
//# sourceMappingURL=useControlledForm.modern.mjs.map
